import requests
import os
from openai import OpenAI
import pandas as pd
from dotenv import load_dotenv

# ====== р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕▓р╕Вр╕▓р╕зр╕┤р╕ир╕зр╕Бр╕гр╕гр╕бр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓ ======
search_terms = [
    "р╕зр╕┤р╕ир╕зр╕Бр╕гр╕гр╕бр╣Вр╕вр╕Шр╕▓",
    "р╕зр╕┤р╕ир╕зр╕Бр╕гр╕гр╕бр╕Др╕нр╕бр╕Юр╕┤р╕зр╣Ар╕Хр╕нр╕гр╣М",
    "р╕зр╕┤р╕ир╕зр╕Бр╕гр╕гр╕бр╣Ар╕Др╕бр╕╡",
]

load_dotenv(override=True)

TYPHOON_API_KEY = os.getenv('TYPHOON_API_KEY')

client = OpenAI(
    api_key=TYPHOON_API_KEY,
    base_url="https://api.opentyphoon.ai/v1"
)
# ====== р╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б TCAS JSON ======
json_url = 'https://my-tcas.s3.ap-southeast-1.amazonaws.com/mytcas/courses.json'
response = requests.get(json_url)

if response.status_code != 200:
    print(f"тЭМ р╣Вр╕лр╕ер╕Ф JSON р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: {response.status_code}")
    exit()

data = response.json()

# ====== р╕зр╕Щр╕ер╕╣р╕Ыр╣Бр╕Хр╣Ир╕ер╕░р╕кр╕▓р╕Вр╕▓ ======
for search_term in search_terms:
    print(f"\nЁЯФО р╕Бр╕│р╕ер╕▒р╕Зр╕Др╣Йр╕Щр╕лр╕▓: {search_term}")
    records = []
    count = 0

    for course in data:
        fields = [
            course.get('program_name_th', '').lower(),
            course.get('field_name_th', '').lower(),
            course.get('faculty_name_th', '').lower()
        ]
        if any(search_term.lower() in field for field in fields):
            count += 1

            program = course.get('program_name_th', 'р╣Др╕бр╣Ир╕Юр╕Ър╕Кр╕╖р╣Ир╕нр╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕г')
            university = course.get('university_name_th', 'р╣Др╕бр╣Ир╕Юр╕Ър╕Кр╕╖р╣Ир╕нр╕бр╕лр╕▓р╕зр╕┤р╕Чр╕вр╕▓р╕ер╕▒р╕в')
            faculty = course.get('faculty_name_th', 'р╣Др╕бр╣Ир╕Юр╕Ър╕Др╕Ур╕░')
            cost = course.get('cost', 'р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕в')

            prompt = f"""
            р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Щр╕╡р╣Йр╕Др╕╖р╕нр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Вр╕нр╕Зр╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕г:\n\"{cost}\"\n

            р╣Гр╕лр╣Йр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╣Бр╕ер╕░р╕Хр╕нр╕Ър╕Бр╕ер╕▒р╕Ър╣Ар╕Йр╕Юр╕▓р╕░р╣Гр╕Щр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Щр╕╡р╣Й:
            р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕в: X р╕Ър╕▓р╕Ч р╕Хр╣Ир╕нр╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓

            р╕Бр╕Ор╕Бр╕▓р╕гр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М:
            1. р╣Гр╕лр╣Йр╣Гр╕Кр╣Йр╕Хр╕гр╕гр╕Бр╕░р╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕ар╕▓р╕йр╕▓р╕Шр╕гр╕гр╕бр╕Кр╕▓р╕Хр╕┤р╣Гр╕Щр╕Бр╕▓р╕гр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
            2. р╣Гр╕лр╣Йр╕Цр╕╖р╕нр╕зр╣Ир╕▓р╕Др╕│р╕зр╣Ир╕▓ 'р╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓р╕ер╕░', 'р╣Ар╕Чр╕нр╕бр╕ер╕░', 'р╕Хр╣Ир╕нр╣Ар╕Чр╕нр╕б', 'р╕Хр╣Ир╕нр╕ар╕▓р╕Д', 'р╕ар╕▓р╕Др╕ер╕░' р╕бр╕╡р╕Др╕зр╕▓р╕бр╕лр╕бр╕▓р╕вр╣Ар╕Фр╕╡р╕вр╕зр╕Бр╕▒р╕Щр╕зр╣Ир╕▓ 'р╕Хр╣Ир╕нр╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓'
            3. р╕Цр╣Йр╕▓р╕бр╕╡р╕лр╕ер╕▓р╕вр╕гр╕░р╕Фр╕▒р╕Ъ р╣Ар╕Кр╣Ир╕Щ 'р╕кр╕▓р╕вр╕зр╕┤р╕Чр╕вр╕▓р╕ир╕▓р╕кр╕Хр╕гр╣М 15,000 / р╕кр╕▓р╕вр╕кр╕▒р╕Зр╕Др╕б 12,000' р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Б 'р╕кр╕▓р╕вр╕зр╕┤р╕Чр╕вр╕▓р╕ир╕▓р╕кр╕Хр╕гр╣М' р╕лр╕гр╕╖р╕нр╕гр╕▓р╕Др╕▓р╕Чр╕╡р╣Ир╕кр╕╣р╕Зр╕Бр╕зр╣Ир╕▓
            4. р╕Цр╣Йр╕▓р╕бр╕╡р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕ар╕▓р╕Др╕др╕Фр╕╣р╕гр╣Йр╕нр╕Щр╕Фр╣Йр╕зр╕в р╣Гр╕лр╣Йр╕бр╕нр╕Зр╕Вр╣Йр╕▓р╕бр╣Бр╕ер╕░р╣Др╕бр╣Ир╣Ар╕нр╕▓р╕Др╣Ир╕▓р╕Щр╕▒р╣Йр╕Щр╕бр╕▓р╣Гр╕Кр╣Й
            5. р╕Цр╣Йр╕▓р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕бр╕╡р╕Чр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Хр╕ер╕нр╕Фр╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕гр╣Бр╕ер╕░р╕Хр╣Ир╕нр╕ар╕▓р╕Д р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Бр╣Ар╕Йр╕Юр╕▓р╕░р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Хр╣Ир╕нр╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓
            6. р╕Цр╣Йр╕▓р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕бр╕╡р╣Бр╕Др╣Ир╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Ар╕Фр╕╡р╕вр╕з р╕лр╕гр╕╖р╕нр╣Гр╕Кр╣Йр╕Др╕│р╣Ар╕Кр╣Ир╕Щ 'р╕Др╣Ир╕▓р╣Ар╕гр╕╡р╕вр╕Щр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф', 'р╕Др╣Ир╕▓р╣Ар╕ер╣Ир╕▓р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕зр╕б', '4 р╕Ыр╕╡', р╕лр╕гр╕╖р╕н '8 р╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓' р╣Гр╕лр╣Йр╕Цр╕╖р╕нр╕зр╣Ир╕▓р╣Ар╕Ыр╣Зр╕Щ 'р╕Хр╕ер╕нр╕Фр╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕г' р╣Бр╕ер╕░р╣Гр╕лр╣Йр╕лр╕▓р╕г 8 р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕▓р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Хр╣Ир╕нр╕ар╕▓р╕Д
            7. р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Кр╕▒р╕Фр╣Ар╕Ир╕Щ р╕лр╕гр╕╖р╕нр╕ер╕┤р╕Зр╕Бр╣Мр╣Ар╕зр╣Зр╕Ър╣Др╕Лр╕Хр╣М р╣Ар╕Кр╣Ир╕Щ 'р╕Фр╕╣р╕Чр╕╡р╣И...', 'https://...' р╣Гр╕лр╣Йр╕Хр╕нр╕Ър╕зр╣Ир╕▓:\nр╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕в: р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╣Ир╕нр╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓
            8. р╕лр╣Йр╕▓р╕бр╕Хр╕нр╕Ър╣Ар╕Бр╕┤р╕Щр╕лр╕гр╕╖р╕нр╕Ьр╕┤р╕Фр╕Ир╕▓р╕Бр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Щр╕╡р╣Йр╣Ар╕Фр╣Зр╕Фр╕Вр╕▓р╕Ф
            """

            try:
                chat_response = client.chat.completions.create(
                    model="typhoon-v2.1-12b-instruct",
                    messages=[
                        {"role": "system", "content": "р╕Хр╕нр╕Ър╣Ар╕Йр╕Юр╕▓р╕░р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Чр╕╡р╣Ир╕кр╕▒р╣Ир╕Зр╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ р╕лр╣Йр╕▓р╕бр╕Хр╕нр╕Ър╕нр╕вр╣Ир╕▓р╕Зр╕нр╕╖р╣Ир╕Щ"},
                        {"role": "user", "content": prompt}
                    ],
                    temperature=0.5,
                    max_tokens=100,
                )

                filtered_cost = chat_response.choices[0].message.content.strip()
            except Exception as e:
                filtered_cost = "р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕в: р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╣Ир╕нр╕ар╕▓р╕Др╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓"
                print(f"тЪая╕П р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф Typhoon: {e}")

            records.append({
                "р╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕г": program,
                "р╕бр╕лр╕▓р╕зр╕┤р╕Чр╕вр╕▓р╕ер╕▒р╕в": university,
                "р╕Др╕Ур╕░": faculty,
                "р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕в (р╕Хр╣Ир╕нр╕ар╕▓р╕Д)": filtered_cost,
                "р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Хр╕▓р╕бр╣Ар╕зр╣Зр╕Ъ": cost
            })

            print(f"тЬЕ {program} | {university} | {filtered_cost}")

    # ====== р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М CSV р╕Цр╣Йр╕▓р╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е ======
    if count > 0:
        filename = f"{search_term}.csv"
        df = pd.DataFrame(records)
        df.to_csv(filename, index=False, encoding='utf-8-sig')
        print(f"ЁЯУБ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Др╕Яр╕ер╣Мр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в: {filename} ({count} р╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕г)")
    else:
        print(f"тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕гр╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕Зр╕Бр╕▒р╕Ъ: {search_term}")
